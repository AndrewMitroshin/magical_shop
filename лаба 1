#include <iostream>
using namespace std;
const int SIZE = 100;
int fSet[SIZE];
int sSet[SIZE];
int choice_add1=0;
int choice_add2=0;
string choice;
template <typename T, typename U>
class Set{
	private:
		T a_Set;// размер первого множества
		T b_Set;// размер второго множества
	public:
		void add(T a, T b)
			{
				cout << "\nIf you want add/delete elem, enter 'add', else enter any lenght:\n";
				cin >> choice;
				if (choice=="add")
					{
						cout << "First set, how many elements you are want enter?\n";
						cin >> choice_add1;
						cout << "Second set, how many elements you are want enter?\n";
						cin >> choice_add2;
					}
				bool s=false;
				a_Set = a;
				b_Set = b;
				cout << "Enter first set: \n";
				for (int i=0; i<a+choice_add1; i++) // вводим элементы первого множества
					{
						cin >> fSet[i];
					}
				cout << "\nEnter second set: \n";
				for (int i=0; i<b+choice_add2; i++) // вводим элементы второго множества
					{
						cin >> sSet[i];
					}		
			}
		void Show(T const &a, T const &b)
			{
				a_Set = a;
				b_Set = b;
				cout << "\nFirst Set:\n{";
				for (int i=0; i<a+choice_add1; i++) // выводим элементы первого множества
					{
						if (i==a+choice_add1-1) cout << fSet[i];
						else cout << fSet[i] << ", ";
					}
				cout << "}\nSecond Set:\n{";
				for (int i=0; i<b+choice_add2; i++) // выводим элементы второго множества
					{
						if (i==b+choice_add2-1) cout << sSet[i];
						else cout << sSet[i] << ", ";
					}
				cout << "}\n";					
			}
		void difference(T const &a, T const &b) // разность множеств
			{
				a_Set = a;
				b_Set = b;
				for (int i=0; i<a+choice_add1; i++)
					{
						for (int j=0; j<b+choice_add2; j++)
							{
								if (fSet[i]==sSet[j]) i++;
							}
						if (i==a+choice_add1) cout << endl;
						else cout << fSet[i] << ' ';

					}
			}
		void Union(T const &a, T const &b) // объединение множеств
			{
				a_Set = a;
				b_Set = b;
				for (int i=0; i<a+choice_add1; i++)
					{
						cout << fSet[i] << ' ';
						if (i==a+choice_add1-1)
							{
								for (int j=0; j<b+choice_add2; j++)
									{		
										for (i=0; i<a+choice_add1; i++)
											{
												if (fSet[i]==sSet[j]) j++;												
											}
										cout << sSet[j] << ' ';
									}
							}
					}
			}
		void intersection(T const &a, T const &b) // пересечение множеств
			{
				a_Set = a;
				b_Set = b;
				for (int i=0; i<a+choice_add1; i++)
					{
						for (int j=0; j<b+choice_add2; j++)
							{
								if (fSet[i]==sSet[j]) cout << fSet[i] << ' ';
							}
					}
			}
};
int main()
	{
		Set<char, int> one;
		one.add(3, 4);
		one.Show(3, 4);
		cout << "\nDifference:\n";// разность множеств
		one.difference(3, 4);
		
		cout << "\nUnion:\n";// объединение множеств
		one.Union(3,4);
		
		cout << "\n\nIntersection:\n"; // пересечение множеств
		one.intersection(3,4);

		return 0;
	}
